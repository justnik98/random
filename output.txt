/home/justnik/CLionProjects/random/Random.cpp:4:1: warning: #includes are not sorted properly [llvm-include-order]
#include <cmath>
^        ~~~~~~~
         "Random.h"
/home/justnik/CLionProjects/random/Random.cpp:7:1: warning: constructor does not initialize these fields: X [cppcoreguidelines-pro-type-member-init]
Random::Random() {
^
/home/justnik/CLionProjects/random/Random.cpp:7:1: warning: constructor does not initialize these fields: X [hicpp-member-init]
Random::Random() {
^
/home/justnik/CLionProjects/random/Random.cpp:9:9: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = i;
        ^
/home/justnik/CLionProjects/random/Random.cpp:13:1: warning: constructor does not initialize these fields: X [cppcoreguidelines-pro-type-member-init]
Random::Random(uint32_t seed) {
^
/home/justnik/CLionProjects/random/Random.cpp:13:1: warning: constructor does not initialize these fields: X [hicpp-member-init]
Random::Random(uint32_t seed) {
^
/home/justnik/CLionProjects/random/Random.cpp:15:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < p; ++i) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~
        (unsigned int & i : X)
/home/justnik/CLionProjects/random/Random.cpp:16:9: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = std::rand();
        ^
/home/justnik/CLionProjects/random/Random.cpp:16:16: warning: rand() has limited randomness; use C++11 random library instead [cert-msc30-c]
        X[i] = std::rand();
               ^
/home/justnik/CLionProjects/random/Random.cpp:16:16: warning: rand() has limited randomness; use C++11 random library instead [cert-msc50-cpp]
/home/justnik/CLionProjects/random/Random.cpp:20:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
uint32_t Random::rand() {
~~~~~~~~         ^
auto                    -> uint32_t
/home/justnik/CLionProjects/random/Random.cpp:21:19: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
    uint32_t y = (X[i] & mask1) + (X[i + 1] & mask2);
                  ^
/home/justnik/CLionProjects/random/Random.cpp:21:36: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
    uint32_t y = (X[i] & mask1) + (X[i + 1] & mask2);
                                   ^
/home/justnik/CLionProjects/random/Random.cpp:22:9: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
    if (y & 1) {
        ^
/home/justnik/CLionProjects/random/Random.cpp:22:9: warning: implicit conversion 'unsigned int' -> bool [readability-implicit-bool-conversion]
    if (y & 1) {
        ^
        (    ) != 0u
/home/justnik/CLionProjects/random/Random.cpp:23:9: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = X[(i + q) % p] ^ (y >> 1) ^ a;
        ^
/home/justnik/CLionProjects/random/Random.cpp:23:16: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = X[(i + q) % p] ^ (y >> 1) ^ a;
               ^
/home/justnik/CLionProjects/random/Random.cpp:23:34: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        X[i] = X[(i + q) % p] ^ (y >> 1) ^ a;
                                 ^
/home/justnik/CLionProjects/random/Random.cpp:25:9: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = X[(i + q) % p] ^ (y >> 1);
        ^
/home/justnik/CLionProjects/random/Random.cpp:25:16: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
        X[i] = X[(i + q) % p] ^ (y >> 1);
               ^
/home/justnik/CLionProjects/random/Random.cpp:25:34: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        X[i] = X[(i + q) % p] ^ (y >> 1);
                                 ^
/home/justnik/CLionProjects/random/Random.cpp:27:9: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
    y = X[i] ^ (y >> u) ^ ((y << s) & b) ^ ((y << t) & c) ^ (y >> l);
        ^
/home/justnik/CLionProjects/random/Random.cpp:33:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::rnd() {
~~~~~~         ^
auto                 -> double
/home/justnik/CLionProjects/random/Random.cpp:37:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randGaussian(double mean, double sigma) {
~~~~~~         ^
auto                                                   -> double
/home/justnik/CLionProjects/random/Random.cpp:39:12: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays]
    static double z[2];
           ^
/home/justnik/CLionProjects/random/Random.cpp:39:12: warning: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays]
/home/justnik/CLionProjects/random/Random.cpp:39:12: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
/home/justnik/CLionProjects/random/Random.cpp:40:9: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> bool [readability-implicit-bool-conversion]
    if (ind) {
        ^
            != 0u
/home/justnik/CLionProjects/random/Random.cpp:41:9: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
        ind ^= 1;
        ^
/home/justnik/CLionProjects/random/Random.cpp:52:25: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    double val = sqrt((-2.0 * log(s) / s));
                        ^
/home/justnik/CLionProjects/random/Random.cpp:52:25: warning: 2.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/justnik/CLionProjects/random/Random.cpp:55:5: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
    ind ^= 1;
    ^
/home/justnik/CLionProjects/random/Random.cpp:59:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randExp(double mean) {
~~~~~~         ^
auto                                -> double
/home/justnik/CLionProjects/random/Random.cpp:60:12: warning: variable 'd' is not initialized [cppcoreguidelines-init-variables]
    double d;
           ^
             = NAN
/home/justnik/CLionProjects/random/Random.cpp:63:15: warning: narrowing conversion from 'double' to 'bool' [bugprone-narrowing-conversions]
    } while (!d);
              ^
/home/justnik/CLionProjects/random/Random.cpp:63:15: warning: narrowing conversion from 'double' to 'bool' [cppcoreguidelines-narrowing-conversions]
/home/justnik/CLionProjects/random/Random.cpp:63:15: warning: implicit conversion 'double' -> bool [readability-implicit-bool-conversion]
    } while (!d);
             ~^
                == 0.0
/home/justnik/CLionProjects/random/Random.cpp:67:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randChi2(uint32_t k) {
~~~~~~         ^
auto                                -> double
/home/justnik/CLionProjects/random/Random.cpp:69:12: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
    double r;
           ^
             = NAN
/home/justnik/CLionProjects/random/Random.cpp:71:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
        r = randGaussian();
            ^
/home/justnik/CLionProjects/random/Random.cpp:37:29: note: default parameter was declared here
double Random::randGaussian(double mean, double sigma) {
                            ^
/home/justnik/CLionProjects/random/Random.cpp:77:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randLogistic(double mean, double sigma) {
~~~~~~         ^
auto                                                   -> double
/home/justnik/CLionProjects/random/Random.cpp:85:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randCauchy(double x0, double gamma) {
~~~~~~         ^
auto                                               -> double
/home/justnik/CLionProjects/random/Random.cpp:86:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    double x, y;
    ^~~~~~~~~~~~
/home/justnik/CLionProjects/random/Random.cpp:86:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x, y;
           ^
             = NAN
/home/justnik/CLionProjects/random/Random.cpp:86:15: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double x, y;
              ^
                = NAN
/home/justnik/CLionProjects/random/Random.cpp:90:40: warning: narrowing conversion from 'double' to 'bool' [bugprone-narrowing-conversions]
    } while ((x * x + y * y) > 1.0 || !y);
                                       ^
/home/justnik/CLionProjects/random/Random.cpp:90:40: warning: narrowing conversion from 'double' to 'bool' [cppcoreguidelines-narrowing-conversions]
/home/justnik/CLionProjects/random/Random.cpp:90:40: warning: implicit conversion 'double' -> bool [readability-implicit-bool-conversion]
    } while ((x * x + y * y) > 1.0 || !y);
                                      ~^
                                      (  == 0.0)
/home/justnik/CLionProjects/random/Random.cpp:94:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
double Random::randStudentT(uint32_t k) {
~~~~~~         ^
auto                                    -> double
/home/justnik/CLionProjects/random/Random.cpp:98:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    return randGaussian() / sqrt(randChi2(k) / k);
           ^
/home/justnik/CLionProjects/random/Random.cpp:37:42: note: default parameter was declared here
double Random::randGaussian(double mean, double sigma) {
                                         ^
/home/justnik/CLionProjects/random/Random.h:5:9: warning: header guard does not follow preferred style [llvm-header-guard]
#ifndef RANDOM_RANDOM_H
        ^~~~~~~~~~~~~~~
        _HOME_JUSTNIK_CLIONPROJECTS_RANDOM_RANDOM_H
/home/justnik/CLionProjects/random/Random.h:8:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         "utils.h"
/home/justnik/CLionProjects/random/Random.h:11:7: warning: class 'Random' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
class Random {
      ^
/home/justnik/CLionProjects/random/Random.h:11:7: warning: class 'Random' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [hicpp-special-member-functions]
/home/justnik/CLionProjects/random/Random.h:15:39: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
    constexpr static uint32_t mask1 = 1 << 31;
                                      ^
/home/justnik/CLionProjects/random/Random.h:28:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays]
    uint32_t X[p];
    ^
/home/justnik/CLionProjects/random/Random.h:28:5: warning: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays]
/home/justnik/CLionProjects/random/Random.h:28:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
/home/justnik/CLionProjects/random/Random.h:37:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    uint32_t rand();
    ~~~~~~~~ ^
    auto            -> uint32_t
/home/justnik/CLionProjects/random/Random.h:39:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double rnd();
    ~~~~~~ ^
    auto         -> double
/home/justnik/CLionProjects/random/Random.h:41:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randGaussian(double mean = 0, double sigma = 1);
    ~~~~~~ ^
    auto                                                   -> double
/home/justnik/CLionProjects/random/Random.h:41:25: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
    double randGaussian(double mean = 0, double sigma = 1);
                        ^          ~~~~
/home/justnik/CLionProjects/random/Random.h:41:42: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
    double randGaussian(double mean = 0, double sigma = 1);
                                         ^           ~~~~
/home/justnik/CLionProjects/random/Random.h:43:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randExp(double mean);
    ~~~~~~ ^
    auto                        -> double
/home/justnik/CLionProjects/random/Random.h:45:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randChi2(uint32_t k);
    ~~~~~~ ^
    auto                        -> double
/home/justnik/CLionProjects/random/Random.h:47:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randLogistic(double mean, double sigma);
    ~~~~~~ ^
    auto                                           -> double
/home/justnik/CLionProjects/random/Random.h:49:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randCauchy(double x0, double gamma);
    ~~~~~~ ^
    auto                                       -> double
/home/justnik/CLionProjects/random/Random.h:51:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double randStudentT(uint32_t k);
    ~~~~~~ ^
    auto                            -> double
/home/justnik/CLionProjects/random/main.cpp:1:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         "Random.h"
/home/justnik/CLionProjects/random/main.cpp:6:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int main() {
~~~ ^
auto       -> int
/home/justnik/CLionProjects/random/main.cpp:15:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    std::cout << r.randGaussian() << std::endl;
                 ^
/home/justnik/CLionProjects/random/Random.h:41:42: note: default parameter was declared here
    double randGaussian(double mean = 0, double sigma = 1);
                                         ^
/home/justnik/CLionProjects/random/main.cpp:22:20: warning: 100000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    uint32_t num = 100000;
                   ^
/home/justnik/CLionProjects/random/main.cpp:22:20: warning: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/justnik/CLionProjects/random/utils.h:5:9: warning: header guard does not follow preferred style [llvm-header-guard]
#ifndef RANDOM_UTILS_H
        ^~~~~~~~~~~~~~
        _HOME_JUSTNIK_CLIONPROJECTS_RANDOM_UTILS_H
/home/justnik/CLionProjects/random/utils.h:12:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double min(It first, It last);
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.h:15:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double max(It first, It last);
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.h:18:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double sum(It first, It last);
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.h:21:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double mean(It first, It last);
    ~~~~~~ ^
    auto                           -> double
/home/justnik/CLionProjects/random/utils.h:22:1: warning: namespace 'stat' not terminated with a closing comment [google-readability-namespace-comments]
}
^
   // namespace stat
/home/justnik/CLionProjects/random/utils.h:10:11: note: namespace 'stat' starts here
namespace stat {
          ^
/home/justnik/CLionProjects/random/utils.h:22:1: warning: namespace 'stat' not terminated with a closing comment [llvm-namespace-comment]
}
^
  // namespace stat
/home/justnik/CLionProjects/random/utils.h:10:11: note: namespace 'stat' starts here
namespace stat {
          ^
/home/justnik/CLionProjects/random/utils.ipp:5:9: warning: header guard does not follow preferred style [llvm-header-guard]
#ifndef RANDOM_UTILS_IPP
        ^~~~~~~~~~~~~~~~
        _HOME_JUSTNIK_CLIONPROJECTS_RANDOM_UTILS_IPP
/home/justnik/CLionProjects/random/utils.ipp:12:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double min(It first, It last) {
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.ipp:13:50: error: no member named 'numeric_limits' in namespace 'std' [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::max(), std::min<double>);
                                                 ^
/home/justnik/CLionProjects/random/utils.ipp:13:71: error: expected '(' for function-style cast or type construction [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::max(), std::min<double>);
                                                                      ^
/home/justnik/CLionProjects/random/utils.ipp:13:74: error: no member named 'max' in the global namespace [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::max(), std::min<double>);
                                                                         ^
/home/justnik/CLionProjects/random/utils.ipp:17:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double max(It first, It last) {
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.ipp:18:50: error: no member named 'numeric_limits' in namespace 'std' [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::min(), std::max<double>);
                                                 ^
/home/justnik/CLionProjects/random/utils.ipp:18:71: error: expected '(' for function-style cast or type construction [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::min(), std::max<double>);
                                                                      ^
/home/justnik/CLionProjects/random/utils.ipp:18:74: error: no member named 'min' in the global namespace [clang-diagnostic-error]
        return std::accumulate(first, last, std::numeric_limits<double>::min(), std::max<double>);
                                                                         ^
/home/justnik/CLionProjects/random/utils.ipp:22:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double sum(It first, It last) {
    ~~~~~~ ^
    auto                          -> double
/home/justnik/CLionProjects/random/utils.ipp:27:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    double mean(It first, It last) {
    ~~~~~~ ^
    auto                           -> double
/home/justnik/CLionProjects/random/utils.ipp:30:1: warning: namespace 'stat' not terminated with a closing comment [google-readability-namespace-comments]
}
^
   // namespace stat
/home/justnik/CLionProjects/random/utils.ipp:10:11: note: namespace 'stat' starts here
namespace stat {
          ^
/home/justnik/CLionProjects/random/utils.ipp:30:1: warning: namespace 'stat' not terminated with a closing comment [llvm-namespace-comment]
}
^
  // namespace stat
/home/justnik/CLionProjects/random/utils.ipp:10:11: note: namespace 'stat' starts here
namespace stat {
          ^
